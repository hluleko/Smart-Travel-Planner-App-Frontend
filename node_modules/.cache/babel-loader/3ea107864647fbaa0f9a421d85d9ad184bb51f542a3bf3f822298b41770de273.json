{"ast":null,"code":"import LocationSearch from \"./LocationSearch.vue\";\nimport PeopleSelector from \"./PeopleSelector.vue\";\nimport DateSelector from \"./DateSelector.vue\";\nexport default {\n  name: \"TripPlanner\",\n  components: {\n    LocationSearch,\n    PeopleSelector,\n    DateSelector\n  },\n  data() {\n    return {\n      location: null,\n      peopleCount: 1,\n      startDate: null,\n      endDate: null\n    };\n  },\n  computed: {\n    tripDays() {\n      if (!this.startDate || !this.endDate) return 0;\n      const start = new Date(this.startDate);\n      const end = new Date(this.endDate);\n      const diffTime = Math.abs(end - start);\n      return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n    },\n    totalBudget() {\n      if (!this.tripDays || !this.peopleCount || !this.location) return null;\n      const costPerPersonPerDay = 500; // Customize based on location later if needed\n      return this.peopleCount * this.tripDays * costPerPersonPerDay;\n    }\n  },\n  methods: {\n    handleLocation(location) {\n      this.location = location;\n    },\n    handlePeople(count) {\n      this.peopleCount = count;\n    },\n    handleDates({\n      start,\n      end\n    }) {\n      this.startDate = start;\n      this.endDate = end;\n    }\n  }\n};","map":{"version":3,"names":["LocationSearch","PeopleSelector","DateSelector","name","components","data","location","peopleCount","startDate","endDate","computed","tripDays","start","Date","end","diffTime","Math","abs","ceil","totalBudget","costPerPersonPerDay","methods","handleLocation","handlePeople","count","handleDates"],"sources":["C:\\Users\\TyreseMakhubele\\Documents\\Other\\P\\SmartTravelApp\\Frontend\\smart-travel-planner\\src\\components\\trip\\TripPlanner.vue"],"sourcesContent":["<template>\r\n    <div class=\"trip-planner\">\r\n      <h1>Plan Your Trip</h1>\r\n  \r\n      <LocationSearch @locationSelected=\"handleLocation\" />\r\n      <PeopleSelector @peopleChanged=\"handlePeople\" />\r\n      <DateSelector @datesChanged=\"handleDates\" />\r\n  \r\n      <div v-if=\"totalBudget !== null\" class=\"budget-box\">\r\n        <h2>Estimated Trip Budget: R{{ totalBudget.toFixed(2) }}</h2>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import LocationSearch from \"./LocationSearch.vue\";\r\n  import PeopleSelector from \"./PeopleSelector.vue\";\r\n  import DateSelector from \"./DateSelector.vue\";\r\n  \r\n  export default {\r\n    name: \"TripPlanner\",\r\n    components: {\r\n      LocationSearch,\r\n      PeopleSelector,\r\n      DateSelector,\r\n    },\r\n    data() {\r\n      return {\r\n        location: null,\r\n        peopleCount: 1,\r\n        startDate: null,\r\n        endDate: null,\r\n      };\r\n    },\r\n    computed: {\r\n      tripDays() {\r\n        if (!this.startDate || !this.endDate) return 0;\r\n        const start = new Date(this.startDate);\r\n        const end = new Date(this.endDate);\r\n        const diffTime = Math.abs(end - start);\r\n        return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\r\n      },\r\n      totalBudget() {\r\n        if (!this.tripDays || !this.peopleCount || !this.location) return null;\r\n  \r\n        const costPerPersonPerDay = 500; // Customize based on location later if needed\r\n        return this.peopleCount * this.tripDays * costPerPersonPerDay;\r\n      },\r\n    },\r\n    methods: {\r\n      handleLocation(location) {\r\n        this.location = location;\r\n      },\r\n      handlePeople(count) {\r\n        this.peopleCount = count;\r\n      },\r\n      handleDates({ start, end }) {\r\n        this.startDate = start;\r\n        this.endDate = end;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .trip-planner {\r\n    max-width: 800px;\r\n    margin: auto;\r\n    padding: 2rem;\r\n    text-align: center;\r\n  }\r\n  \r\n  .budget-box {\r\n    margin-top: 2rem;\r\n    background: #f0f4ff;\r\n    padding: 1.5rem;\r\n    border-radius: 10px;\r\n    font-size: 1.2rem;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":"AAeE,OAAOA,cAAa,MAAO,sBAAsB;AACjD,OAAOC,cAAa,MAAO,sBAAsB;AACjD,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVJ,cAAc;IACdC,cAAc;IACdC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE,CAAC;MACdC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC,IAAI,CAACH,SAAQ,IAAK,CAAC,IAAI,CAACC,OAAO,EAAE,OAAO,CAAC;MAC9C,MAAMG,KAAI,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACL,SAAS,CAAC;MACtC,MAAMM,GAAE,GAAI,IAAID,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAC;MAClC,MAAMM,QAAO,GAAIC,IAAI,CAACC,GAAG,CAACH,GAAE,GAAIF,KAAK,CAAC;MACtC,OAAOI,IAAI,CAACE,IAAI,CAACH,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,IAAI,CAAC;IACxD,CAAC;IACDI,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACR,QAAO,IAAK,CAAC,IAAI,CAACJ,WAAU,IAAK,CAAC,IAAI,CAACD,QAAQ,EAAE,OAAO,IAAI;MAEtE,MAAMc,mBAAkB,GAAI,GAAG,EAAE;MACjC,OAAO,IAAI,CAACb,WAAU,GAAI,IAAI,CAACI,QAAO,GAAIS,mBAAmB;IAC/D;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAChB,QAAQ,EAAE;MACvB,IAAI,CAACA,QAAO,GAAIA,QAAQ;IAC1B,CAAC;IACDiB,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACjB,WAAU,GAAIiB,KAAK;IAC1B,CAAC;IACDC,WAAWA,CAAC;MAAEb,KAAK;MAAEE;IAAI,CAAC,EAAE;MAC1B,IAAI,CAACN,SAAQ,GAAII,KAAK;MACtB,IAAI,CAACH,OAAM,GAAIK,GAAG;IACpB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}