{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* global google */\nimport { googleMapsApiKey } from \"@/config\";\nexport default {\n  name: \"LocationSearch\",\n  data() {\n    return {\n      searchQuery: \"\",\n      map: null,\n      places: [],\n      loading: false,\n      defaultImage: \"https://via.placeholder.com/150?text=No+Image\",\n      apiKey: googleMapsApiKey\n    };\n  },\n  mounted() {\n    this.loadGoogleMaps();\n  },\n  methods: {\n    loadGoogleMaps() {\n      if (!window.google || !window.google.maps) {\n        const script = document.createElement(\"script\");\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&libraries=places`;\n        script.async = true;\n        script.defer = true;\n        script.crossOrigin = \"anonymous\"; // Important to allow CORS error reporting\n        script.onload = this.initMap;\n        document.head.appendChild(script);\n      } else {\n        this.initMap();\n      }\n    },\n    initMap() {\n      const dummyDiv = document.createElement(\"div\");\n      this.map = new google.maps.Map(dummyDiv); // Invisible map\n      this.initAutocomplete();\n    },\n    initAutocomplete() {\n      const input = document.getElementById(\"location-input\");\n      const autocomplete = new google.maps.places.Autocomplete(input, {\n        componentRestrictions: {\n          country: \"ZA\"\n        },\n        fields: [\"geometry\", \"name\"]\n      });\n      autocomplete.addListener(\"place_changed\", () => {\n        const place = autocomplete.getPlace();\n        if (!place.geometry) return;\n        this.fetchNearbyPlaces(place.geometry.location);\n      });\n    },\n    fetchNearbyPlaces(location) {\n      this.loading = true;\n      this.places = [];\n      const request = {\n        query: \"tourist attractions, parks, restaurants, museums\",\n        location,\n        radius: 5000\n      };\n      const service = new google.maps.places.PlacesService(this.map);\n      service.textSearch(request, (results, status) => {\n        if (status !== google.maps.places.PlacesServiceStatus.OK || !results) {\n          console.error(\"Error fetching places:\", status);\n          this.loading = false;\n          return;\n        }\n        const placePromises = results.map(place => {\n          return new Promise(resolve => {\n            service.getDetails({\n              placeId: place.place_id,\n              fields: [\"name\", \"formatted_address\", \"rating\", \"photos\"]\n            }, (details, status) => {\n              if (status === google.maps.places.PlacesServiceStatus.OK) {\n                resolve({\n                  name: details.name,\n                  rating: details.rating,\n                  address: details.formatted_address,\n                  photo: details.photos?.[0]?.getUrl({\n                    maxWidth: 300\n                  }) || null\n                });\n              } else {\n                resolve(null);\n              }\n            });\n          });\n        });\n        Promise.all(placePromises).then(placesData => {\n          this.places = placesData.filter(p => p !== null);\n          this.loading = false;\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["googleMapsApiKey","name","data","searchQuery","map","places","loading","defaultImage","apiKey","mounted","loadGoogleMaps","methods","window","google","maps","script","document","createElement","src","async","defer","crossOrigin","onload","initMap","head","appendChild","dummyDiv","Map","initAutocomplete","input","getElementById","autocomplete","Autocomplete","componentRestrictions","country","fields","addListener","place","getPlace","geometry","fetchNearbyPlaces","location","request","query","radius","service","PlacesService","textSearch","results","status","PlacesServiceStatus","OK","console","error","placePromises","Promise","resolve","getDetails","placeId","place_id","details","rating","address","formatted_address","photo","photos","getUrl","maxWidth","all","then","placesData","filter","p"],"sources":["C:\\Users\\TyreseMakhubele\\Documents\\Other\\P\\SmartTravelApp\\Frontend\\smart-travel-planner\\src\\components\\maps\\LocationSearch.vue"],"sourcesContent":["<template>\r\n    <div class=\"location-search\">\r\n      <h2>Explore Nearby Sites</h2>\r\n  \r\n      <input\r\n        type=\"text\"\r\n        id=\"location-input\"\r\n        class=\"search-input\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Enter a city or location...\"\r\n      />\r\n  \r\n      <div v-if=\"loading\" class=\"loading\">Loading sites near you...</div>\r\n  \r\n      <div v-if=\"places.length\" class=\"places-list\">\r\n        <div\r\n          v-for=\"(place, index) in places\"\r\n          :key=\"index\"\r\n          class=\"place-card\"\r\n        >\r\n          <img\r\n            :src=\"place.photo || defaultImage\"\r\n            alt=\"Place\"\r\n            class=\"place-image\"\r\n          />\r\n          <div class=\"place-info\">\r\n            <h3>{{ place.name }}</h3>\r\n            <p>{{ place.address }}</p>\r\n            <p v-if=\"place.rating\">Rating: {{ place.rating }} ‚≠ê</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  /* global google */\r\n  import {googleMapsApiKey} from \"@/config\"; \r\n\r\n  export default {\r\n    name: \"LocationSearch\",\r\n    data() {\r\n      return {\r\n        searchQuery: \"\",\r\n        map: null,\r\n        places: [],\r\n        loading: false,\r\n        defaultImage: \"https://via.placeholder.com/150?text=No+Image\",\r\n        apiKey: googleMapsApiKey, \r\n      };\r\n    },\r\n    mounted() {\r\n      this.loadGoogleMaps();\r\n    },\r\n    methods: {\r\n      loadGoogleMaps() {\r\n        if (!window.google || !window.google.maps) {\r\n          const script = document.createElement(\"script\");\r\n          script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&libraries=places`;\r\n          script.async = true;\r\n          script.defer = true;\r\n          script.crossOrigin = \"anonymous\"; // Important to allow CORS error reporting\r\n          script.onload = this.initMap;\r\n          document.head.appendChild(script);\r\n        } else {\r\n          this.initMap();\r\n        }\r\n      },\r\n      initMap() {\r\n        const dummyDiv = document.createElement(\"div\");\r\n        this.map = new google.maps.Map(dummyDiv); // Invisible map\r\n        this.initAutocomplete();\r\n      },\r\n      initAutocomplete() {\r\n        const input = document.getElementById(\"location-input\");\r\n        const autocomplete = new google.maps.places.Autocomplete(input, {\r\n          componentRestrictions: { country: \"ZA\" },\r\n          fields: [\"geometry\", \"name\"],\r\n        });\r\n  \r\n        autocomplete.addListener(\"place_changed\", () => {\r\n          const place = autocomplete.getPlace();\r\n          if (!place.geometry) return;\r\n          this.fetchNearbyPlaces(place.geometry.location);\r\n        });\r\n      },\r\n      fetchNearbyPlaces(location) {\r\n        this.loading = true;\r\n        this.places = [];\r\n  \r\n        const request = {\r\n          query: \"tourist attractions, parks, restaurants, museums\",\r\n          location,\r\n          radius: 5000,\r\n        };\r\n  \r\n        const service = new google.maps.places.PlacesService(this.map);\r\n        service.textSearch(request, (results, status) => {\r\n          if (status !== google.maps.places.PlacesServiceStatus.OK || !results) {\r\n            console.error(\"Error fetching places:\", status);\r\n            this.loading = false;\r\n            return;\r\n          }\r\n  \r\n          const placePromises = results.map((place) => {\r\n            return new Promise((resolve) => {\r\n              service.getDetails(\r\n                {\r\n                  placeId: place.place_id,\r\n                  fields: [\"name\", \"formatted_address\", \"rating\", \"photos\"],\r\n                },\r\n                (details, status) => {\r\n                  if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n                    resolve({\r\n                      name: details.name,\r\n                      rating: details.rating,\r\n                      address: details.formatted_address,\r\n                      photo: details.photos?.[0]?.getUrl({ maxWidth: 300 }) || null,\r\n                    });\r\n                  } else {\r\n                    resolve(null);\r\n                  }\r\n                }\r\n              );\r\n            });\r\n          });\r\n  \r\n          Promise.all(placePromises).then((placesData) => {\r\n            this.places = placesData.filter((p) => p !== null);\r\n            this.loading = false;\r\n          });\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  .location-search {\r\n    max-width: 600px;\r\n    margin: auto;\r\n    padding: 2rem;\r\n    text-align: center;\r\n  }\r\n  \r\n  .search-input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    font-size: 1rem;\r\n    border-radius: 8px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .loading {\r\n    margin-top: 1rem;\r\n    font-style: italic;\r\n  }\r\n  \r\n  .places-list {\r\n    margin-top: 2rem;\r\n  }\r\n  \r\n  .place-card {\r\n    display: flex;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n    padding: 1rem;\r\n    border: 1px solid #eee;\r\n    border-radius: 10px;\r\n    background: #fafafa;\r\n    align-items: center;\r\n  }\r\n  \r\n  .place-image {\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .place-info {\r\n    text-align: left;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}